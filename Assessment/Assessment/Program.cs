namespace PurchaseOrderSystem
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create instances of the services
            IOrderService orderService = new OrderService();

            // Create entities
            Customer customer = new Customer { Id = 1, Name = "John Doe" };
            Employee employee = new Employee { Id = 1, Name = "Jane Smith" };
            Supplier supplier = new Supplier { Id = 1, Name = "Acme Corp" };
            Shipper shipper = new Shipper { Id = 1, Name = "FastShip" };

            Category category = new Category { Id = 1, Name = "Electronics" };
            Product product = new Product { Id = 1, Name = "Laptop", Category = category, Price = 1000m };

            // Customer places an order
            Order order = orderService.CreateOrder(customer, product);

            // Employee processes the order and generates the invoice
            Invoice invoice = orderService.ProcessOrder(order, employee);

            // Supplier supplies the order
            orderService.SupplyOrder(order, supplier);

            // Shipper ships the order
            orderService.ShipOrder(order, shipper);

            // Output order and invoice details
            Console.WriteLine($"Order for {order.Product.Name} placed by {order.Customer.Name} has been processed.");
            Console.WriteLine($"Invoice generated by {invoice.ProcessedBy.Name} for amount {invoice.TotalAmount:C}.");
        }
    }
}

